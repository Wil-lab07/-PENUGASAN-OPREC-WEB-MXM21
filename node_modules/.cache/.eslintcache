[{"C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\index.js":"1","C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\App.js":"2","C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\reportWebVitals.js":"3","C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\Homepage.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":198,"mtime":1613488620299,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2592,"mtime":1613525723436,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uth373",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\index.js",[],"C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\App.js",["20"],"import logo from './logo.svg';\nimport './App.css';\nimport Homepage from './Homepage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\reportWebVitals.js",[],"C:\\Willy\\Visual Studio Code\\Training\\Open Recruitment Maxima\\random-quote-generator\\src\\Homepage.js",["21","22","23"],"import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst Homepage = () => {\r\n    \r\n    const [quote, setQuote] = useState([]);\r\n    const [author, setAuthor] = useState([]);\r\n    const writtenBy = \"Written by \";\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isAppear, setIsAppear] = useState(false);\r\n\r\n    const getQuote = () => {\r\n        // Axios.get(\"https://api.quotable.io/random\")\r\n        //     .then(res => {\r\n        //         setQuote(res.data.content);\r\n        //         setAuthor(res.data.author);\r\n        //         setIsLoading(false);\r\n        //         setIsAppear(true);\r\n        //     })\r\n        fetch('https://api.quotable.io/random')\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setQuote(data.content);\r\n                setAuthor(data.author);\r\n                setIsLoading(false);\r\n                setIsAppear(true);\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            getQuote();\r\n        }, 1000)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"Homepage\">\r\n            <div className=\"content\">\r\n                <div className=\"Header\">\r\n                    <img src=\"https://help.twitter.com/content/dam/help-twitter/brand/logo.png\" alt=\"\"/>\r\n                    <h2>Random Quote Generator</h2>\r\n                </div>\r\n                <div className=\"Main\">\r\n                    {isLoading && \r\n                        <div class = \"Loading\">\r\n                            <div className=\"obj\"></div>\r\n                            <div className=\"obj\"></div>\r\n                            <div className=\"obj\"></div>\r\n                            <div className=\"obj\"></div>\r\n                        </div>\r\n                    }\r\n                    {isAppear && \r\n                        <div className=\"Article\">\r\n                            <div className=\"Quote\">\r\n                                <h2>{quote}</h2>\r\n                            </div>\r\n                            <div className=\"Author\">\r\n                                <p>{writtenBy}<span>{author}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"button\">\r\n                <a onClick = {getQuote}>Quote</a>\r\n                <a href={`https://twitter.com/intent/tweet?text=${quote} - ${author}`} target = \"_blank\">Tweet</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Homepage;",{"ruleId":"24","severity":1,"message":"25","line":1,"column":8,"nodeType":"26","messageId":"27","endLine":1,"endColumn":12},{"ruleId":"24","severity":1,"message":"28","line":2,"column":8,"nodeType":"26","messageId":"27","endLine":2,"endColumn":13},{"ruleId":"29","severity":1,"message":"30","line":68,"column":17,"nodeType":"31","endLine":68,"endColumn":41},{"ruleId":"32","severity":1,"message":"33","line":69,"column":17,"nodeType":"31","endLine":69,"endColumn":106},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener"]